var documenterSearchIndex = {"docs":
[{"location":"text/#Working-with-Text-Data","page":"Text","title":"Working with Text Data","text":"","category":"section"},{"location":"text/","page":"Text","title":"Text","text":"We'll work with text data in many applications. We've included a few methods to help with text processing. ","category":"page"},{"location":"text/#VLDataScienceMachineLearningPackage.tokenize","page":"Text","title":"VLDataScienceMachineLearningPackage.tokenize","text":"function tokenize(s::String, tokens::Dict{String, Int64}; \n    pad::Int64 = 0, padleft::Bool = false, delim::Char = ' ') -> Array{Int64,1}\n\nArguments\n\ns::String - the string to tokenize.\ntokens::Dict{String, Int64} - a dictionary of tokens in alphabetical order (key: token, value: position) for the entire document.\npad::Int64 - (optional) the number of padding tokens to add to the end of the tokenized string. Default is 0.\npadleft::Bool - (optional) if true, the padding tokens are added to the beginning of the tokenized string. Default is false.\ndelim::Char - (optional) the delimiter used in the string. Default is ' '.\n\nReturns\n\nArray{Int64,1} - an array of integers representing the vectorized string.\n\n\n\n\n\n","category":"function"},{"location":".ipynb_checkpoints/index-checkpoint/#VLDataScienceMachineLearningPackage.jl","page":"VLDataScienceMachineLearningPackage.jl","title":"VLDataScienceMachineLearningPackage.jl","text":"","category":"section"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"VLDataScienceMachineLearningPackage.jl","title":"VLDataScienceMachineLearningPackage.jl","text":"The VLDataScienceMachineLearningPackage.jl package is a Julia package that provides functions and types useful for data science, machine learning, and artificial intelligence applications. The package is designed to be simple and easy to use, and it is suitable for students, researchers, and practitioners in the data science and machine learning areas.","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/#Installation","page":"VLDataScienceMachineLearningPackage.jl","title":"Installation","text":"","category":"section"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"VLDataScienceMachineLearningPackage.jl","title":"VLDataScienceMachineLearningPackage.jl","text":"The package can be installed by running the following command in the Julia REPL:","category":"page"},{"location":".ipynb_checkpoints/index-checkpoint/","page":"VLDataScienceMachineLearningPackage.jl","title":"VLDataScienceMachineLearningPackage.jl","text":"using Pkg\nPkg.add(url=\"https://github.com/varnerlab/VLDataScienceMachineLearningPackage.jl.git\")","category":"page"},{"location":"data/#Data","page":"Data","title":"Data","text":"","category":"section"},{"location":"data/","page":"Data","title":"Data","text":"We've included several datasets in the package that we use for examples, activities, etc. ","category":"page"},{"location":"data/#VLDataScienceMachineLearningPackage.MyKaggleCustomerSpendingDataset","page":"Data","title":"VLDataScienceMachineLearningPackage.MyKaggleCustomerSpendingDataset","text":"MyKaggleCustomerSpendingDataset() -> DataFrame\n\nLoad the Kaggle customer spending dataset as a DataFrame.  The original dataset can be found at: Spending dataset.\n\n\n\n\n\n","category":"function"},{"location":"data/#VLDataScienceMachineLearningPackage.MyStringDecodeChallengeDataset","page":"Data","title":"VLDataScienceMachineLearningPackage.MyStringDecodeChallengeDataset","text":"MyStringDecodeChallengeDataset() -> NamedTuple\n\nLoad the String Decode Challenge testing and production datasets. \n\nReturn\n\nNamedTuple: A tuple containing the three datasets:\ntest_part_1: The first part of the test dataset.\ntest_part_2: The second part of the test dataset.\nproduction: The production dataset.\n\n\n\n\n\n","category":"function"},{"location":"data/#VLDataScienceMachineLearningPackage.MyCommonSurnameDataset","page":"Data","title":"VLDataScienceMachineLearningPackage.MyCommonSurnameDataset","text":"MyCommonSurnameDataset() -> DataFrame\n\nLoad the common surnames dataset by country as a DataFrame. The original dataset can be found at: Common Surnames by Country.\n\n\n\n\n\n","category":"function"},{"location":"data/#VLDataScienceMachineLearningPackage.MyCommonForenameDataset","page":"Data","title":"VLDataScienceMachineLearningPackage.MyCommonForenameDataset","text":"MyCommonForenameDataset() -> DataFrame\n\nLoad the common forenames dataset by country as a DataFrame. The original dataset can be found at: Common Forenames by Country.\n\n\n\n\n\n","category":"function"},{"location":"data/#VLDataScienceMachineLearningPackage.MySarcasmCorpus","page":"Data","title":"VLDataScienceMachineLearningPackage.MySarcasmCorpus","text":"function MySarcasmCorpus() -> MySarcasmRecordCorpusModel\n\nThe function corpus reads a file composed of JSON records and returns the data as a MySarcasmRecordCorpusModel instance. Each record in the file is expected to have the following fields:\n\nis_sarcastic::Bool - a boolean value indicating if the headline is sarcastic.\nheadline::String - the headline of the article.\narticle_link::String - the link to the article.\n\nReturns\n\nMySarcasmRecordCorpusModel - the data from the file as a MySarcasmRecordCorpusModel instance.\n\n\n\n\n\n","category":"function"},{"location":"#VLDataScienceMachineLearningPackage.jl","page":"Home","title":"VLDataScienceMachineLearningPackage.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The VLDataScienceMachineLearningPackage.jl package is a Julia package that provides functions and types useful for data science, machine learning, and artificial intelligence applications. The package is designed to be simple and easy to use, and it is suitable for students, researchers, and practitioners in the data science and machine learning areas.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package can be installed by running the following command in the Julia REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url=\"https://github.com/varnerlab/VLDataScienceMachineLearningPackage.jl.git\")","category":"page"},{"location":"types/#Types","page":"Types","title":"Types","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"We'll work with may types in this package, including some abstract types that will be used to define the structure of our models.","category":"page"},{"location":"types/#VLDataScienceMachineLearningPackage.MySarcasmRecordModel","page":"Types","title":"VLDataScienceMachineLearningPackage.MySarcasmRecordModel","text":"MySarcasmRecordModel <: AbstractTextRecordModel\n\nFields\n\ndata::Array{String, Any}: The data found in the record in the order they were found\n\n\n\n\n\n","category":"type"},{"location":"types/#VLDataScienceMachineLearningPackage.MySarcasmRecordCorpusModel","page":"Types","title":"VLDataScienceMachineLearningPackage.MySarcasmRecordCorpusModel","text":"MySarcasmRecordCorpusModel <: AbstractTextDocumentCorpusModel\n\nFields\n\nrecords::Dict{Int, MySarcasmRecordModel}: The records in the document (collection of records)\ntokens::Dict{String, Int64}: A dictionary of tokens in alphabetical order (key: token, value: position) for the entire document\n\n\n\n\n\n","category":"type"}]
}
